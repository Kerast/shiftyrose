<?php

namespace CT\CoreBundle\Repository;

/**
 * ApplicationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ApplicationRepository extends \Doctrine\ORM\EntityRepository
{

    public function array_findAllWithShift()
    {
        $qb = $this
            ->createQueryBuilder('a')
            ->addSelect('a')
            ->leftjoin('a.shift', 'shift')
            ->addSelect('shift')
            ->leftjoin('shift.department', 'department')
            ->addSelect('department')
            ->leftjoin('department.location', 'location')
            ->addSelect('location')

        ;

        return $qb
            ->getQuery()
            ->getArrayResult()
            ;
    }


    public function array_findAllWithShiftByDepartmentId($department_id)
    {
        $qb = $this
            ->createQueryBuilder('a')
            ->addSelect('a')
            ->leftjoin('a.shift', 'shift')
            ->addSelect('shift')
            ->leftjoin('shift.department', 'department')
            ->andWhere('department.staffomaticId LIKE :department_id')
            ->setParameter('department_id', $department_id)
            ->addSelect('department')
            ->leftjoin('department.location', 'location')
            ->addSelect('location')

        ;

        return $qb
            ->getQuery()
            ->getArrayResult()
            ;
    }

    public function findByUserAndApplicationId($user_id, $shift_id)
    {
        $qb = $this
            ->createQueryBuilder('a')

            ->leftjoin('a.user', 'user')
            ->andWhere('user.id LIKE :user_id')
            ->setParameter('user_id', $user_id)

            ->leftjoin('a.shift', 'shift')
            ->andWhere('shift.id LIKE :shift_id')
            ->setParameter('shift_id', $shift_id)

            ->addSelect('a')
        ;

        return $qb
            ->getQuery()
            ->getResult()
            ;
    }


    public function findByUserAndState($user_id, $state)
    {
        $qb = $this
            ->createQueryBuilder('a')

            ->leftjoin('a.user', 'user')
            ->andWhere('user.id LIKE :user_id')
            ->setParameter('user_id', $user_id)

            ->andWhere('a.state LIKE :state')
            ->setParameter('state', $state)

            ->addSelect('a')
            ->leftjoin('a.shift', 'shift')
            ->addSelect('shift')
            ->leftjoin('shift.department', 'department')
            ->addSelect('department')
            ->leftjoin('department.location', 'location')
            ->addSelect('location')
        ;

        return $qb
            ->getQuery()
            ->getResult()
            ;
    }
}
